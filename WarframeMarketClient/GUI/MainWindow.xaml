<Window x:Name="window" x:Class="WarframeMarketClient.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WarframeMarketClient.GUI"
        xmlns:tabs="clr-namespace:WarframeMarketClient.GUI.Tabs"
        xmlns:converter="clr-namespace:WarframeMarketClient.GUI.Converter"
        mc:Ignorable="d"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        Title="WarframeMarket Client" Height="350" Width="525" WindowStartupLocation="CenterScreen" Style="{DynamicResource MetroWindowStyle}" AllowsTransparency="True" StateChanged="Window_StateChanged">





    <Window.Resources>
        <Color x:Key="WindowBorderColor">Black</Color>
        <SolidColorBrush x:Key="WindowBorderBrush" Color="{StaticResource WindowBorderColor}"/>
        <SolidColorBrush x:Key="WindowResizeBorderBrush" Color="Transparent"/>
        <GridLength x:Key="WindowBorderSize">5</GridLength>

        <converter:OnlineStateToColorConverter x:Key="OnlineStateToColorConverter"/>

        <!-- Code according to
            https://3water.wordpress.com/2013/02/16/metro-style-window-in-wpf/
            With minor modifications
        -->
        <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{StaticResource WindowBorderBrush}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Loaded="PART_LOADED">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{StaticResource WindowBorderSize}" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="{StaticResource WindowBorderSize}" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource WindowBorderSize}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="{StaticResource WindowBorderSize}" />
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.RowSpan="3" Grid.ColumnSpan="3" Background="White">
                                    <Border x:Name="PART_TITLEBAR" 
                                            Margin="0,0,0,0" Height="30" DockPanel.Dock="Top"  
                                            BorderThickness="0,0,0,1" BorderBrush="{StaticResource BorderBrush}"
                                            Background="Transparent"
                                        MouseLeftButtonDown="PART_TITLEBAR_MouseLeftButtonDown"
                                        MouseMove="PART_TITLEBAR_MouseMove"
                                        MouseLeftButtonUp="PART_TITLEBAR_MouseLeftButtonUp">
                                        <DockPanel LastChildFill="False">
                                            <TextBlock Margin="10,0,0,1" VerticalAlignment="Center" 
                                                       Foreground="#FFAAAAAA" TextWrapping="NoWrap" 
                                                       Text="{TemplateBinding Title}" FontSize="16" />
                                            <Button x:Name="PART_CLOSE" DockPanel.Dock="Right" 
                                                    VerticalAlignment="Center" Margin="0"
                                                    Height="30" Width="35" Background="White"
                                                    Style="{DynamicResource MetroWindowButtonStyle}"
                                                    Click="PART_CLOSE_Click">
                                                <Path Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z" 
                                                      Stretch="Uniform" Fill="#FFAAAAAA" Width="10" Margin="0,0,0,0" ></Path>
                                            </Button>
                                            <Button x:Name="PART_MINIMIZE" 
                                                    HorizontalAlignment="Center" 
                                                    VerticalAlignment="Center" Margin="0"
                                                    DockPanel.Dock="Right"
                                                    Height="30" Width="35" Background="White"
                                                    Style="{DynamicResource MetroWindowButtonStyle}"
                                                    Click="PART_MINIMIZE_Click" VerticalContentAlignment="Bottom">
                                                <Button.Content>
                                                    <Path Data="M0,20L53.333,20 53.333,8.888 0,8.888z" 
                                                          Stretch="Uniform" Fill="#FFAAAAAA" Width="10" Margin="0,0,0,8"></Path>
                                                </Button.Content>
                                            </Button>
                                        </DockPanel>
                                    </Border>
                                    <AdornerDecorator DockPanel.Dock="Bottom">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                    </AdornerDecorator>
                                </DockPanel>

                                <Rectangle Name="topLeft" Fill="{StaticResource WindowResizeBorderBrush}"/>
                                <Rectangle Name="top" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Column="1"/>
                                <Rectangle Name="topRight" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Column="2"/>
                                <Rectangle Name="right" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Row="1" Grid.Column="2"/>
                                <Rectangle Name="bottomRight" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Row="2" Grid.Column="2"/>
                                <Rectangle Name="bottom" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Row="2" Grid.Column="1"/>
                                <Rectangle Name="bottomLeft" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Row="2"/>
                                <Rectangle Name="left" Fill="{StaticResource WindowResizeBorderBrush}" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Window}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <AdornerDecorator>
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                        </AdornerDecorator>
                                        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                            <Condition Property="WindowState" Value="Normal"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MetroWindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <Style x:Key="MainTabsStyle" TargetType="local:FancyTabControl" BasedOn="{StaticResource {x:Type local:FancyTabControl}}">
            <Setter Property="BelowTabsContent">
                <Setter.Value>
                    <Button
                        x:Name="Status"
                        Content="{Binding OnlineState}"
                        Background="{Binding OnlineState, Converter={StaticResource OnlineStateToColorConverter}}"
                        FontSize="12"
                        Padding="4,8"
                        BorderThickness="0,1,1,0"
                        >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource CleanButton}">
                                <EventSetter Event="Click" Handler="MainButtonClick"/>
                            </Style>
                        </Button.Style>
                    </Button>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentMargin" Value="10,10,0,10" />
        </Style>


    </Window.Resources>
    
    
    
    
    <Grid>
        <local:FancyTabControl x:Name="mainTabs" Style="{StaticResource MainTabsStyle}">

            <TabItem Header="Settings" DataContext="{Binding ElementName=TabSettings}">
                <tabs:Tab_Settings x:Name="TabSettings"/>
            </TabItem>
            <TabItem Header="Buy" IsEnabled="{Binding IsValid}">
                <tabs:Tab_Items x:Name="TabBuy" DecreaseItemText="Bought" Items="{Binding BuyItems}" />
            </TabItem>
            <TabItem Header="Sell" IsEnabled="{Binding IsValid}">
                <tabs:Tab_Items x:Name="TabSell" DecreaseItemText="Sold" Items="{Binding SellItems}"/>
            </TabItem>
            <TabItem Header="Chats" IsEnabled="{Binding IsValid}">
                <tabs:Tab_Chats x:Name="TabChats" Chats="{Binding Chats}"/>
            </TabItem>
        </local:FancyTabControl>

    </Grid>
</Window>
