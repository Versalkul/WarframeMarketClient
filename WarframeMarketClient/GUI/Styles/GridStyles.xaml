<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:tabs="clr-namespace:WarframeMarketClient.GUI.Tabs"
                    xmlns:vm="clr-namespace:WarframeMarketClient.ViewModel"
                    xmlns:converter="clr-namespace:WarframeMarketClient.GUI.Converter"
                    
                    xmlns:System="clr-namespace:System;assembly=mscorlib">



    <!-- 1 of many places where the validation errors are styled... welcome to WPF-hell -->
    <Style x:Key="dgTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dgTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="0,1,0,0" Background="{TemplateBinding Background}">
                        <ScrollViewer Margin="0" Padding="0,0,0,2" x:Name="PART_ContentHost" SnapsToDevicePixels="True"/>
                        <!-- Draws over the Path drawn by the DataGridCell to be able to highlight binding errors like 'asdf' for numbers -->
                        <Path Name="EditUnderline"
                                    Margin="-3,12,-3,0"
                                    Stroke="{StaticResource BorderBrush}"
                                    StrokeThickness="2"
                                    Stretch="Fill"
                                    Data="M0,0 L0,5 5,5 5,0"
                                    HorizontalAlignment="Center"
                                    Visibility="Visible"
                                    VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="EditUnderline" Property="Stroke" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                              Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="DataGrid">

        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#e0e0e0"/>
        <Setter Property="Background" Value="Transparent"/>

        <!-- Currently does nothing -->
        <Setter Property="RowValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"
                          ToolTip="{Binding RelativeSource={RelativeSource
                          FindAncestor, AncestorType={x:Type DataGridRow}},
                          Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
                                FontWeight="Bold" Foreground="White" 
                                HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <converter:ErrorPropertiesAndNameToHasErrorConverter x:Key="ErrorPropertiesAndNameToHasErrorConverter"/>

            <Style TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Margin="0">
                                <Path Name="EditUnderline"
                                      Margin="3,15,3,0"
                                      Stroke="{StaticResource BorderBrush}"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      Data="M0,0 L0,5 5,5 5,0"
                                      HorizontalAlignment="Center"
                                      Visibility="Hidden"
                                      VerticalAlignment="Center" />
                                <Border Padding="5,10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEditing" Value="True">
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ErrorPropertiesAndNameToHasErrorConverter}">
                                            <Binding Path="ErrorProperties"></Binding>
                                            <Binding RelativeSource="{RelativeSource Self}"></Binding>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter TargetName="EditUnderline" Property="Stroke" Value="Red" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsEditing}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="EditUnderline" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#fff" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#f8f8f8" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource SelectionBrush}" />
                    </Trigger>

                    <DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                        
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BackgroundBorder"
                                      BorderThickness="0,0,0,2" 
                                      Background="Transparent"
                                      BorderBrush="#e0e0e0"
                                      Grid.ColumnSpan="2" />
                                <ContentPresenter
                                      Grid.Column="0"
                                      Margin="5,0,5,10"
                                      VerticalAlignment="Center" />
                                <Path x:Name="SortArrow"
                                      Grid.Column="1"
                                      Visibility="Collapsed"
                                      Data="M0,0 L0.4,0 0.5,0.5 0.6,0 1,0 0.5,1.5 z"
                                      Stretch="Fill"
                                      Width="8"
                                      Height="6"
                                      Fill="{StaticResource SelectionStrongBrush}"
                                      Margin="0,0,0,6"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      RenderTransformOrigin="0.5,0.4" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="toolkit:AutoCompleteBox">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="1,1" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="2" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:AutoCompleteBox}">
                            <Grid Opacity="{TemplateBinding Opacity}">
                                <TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Foreground="{TemplateBinding Foreground}" IsTabStop="True" Margin="0" Padding="{TemplateBinding Padding}" Style="{StaticResource dgTextBoxStyle}"/>
                                <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                    <Border.ToolTip>
                                        <ToolTip x:Name="validationTooltip" Placement="Right">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>True</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                        <Grid.RenderTransform>
                                                            <TranslateTransform X="-25"/>
                                                        </Grid.RenderTransform>
                                                        <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                                                        <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                                                        <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                                                        <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                                                        <Border Background="#FFDC000C" CornerRadius="2">
                                                            <TextBlock Foreground="White" MaxWidth="250" Margin="8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
                                                        </Border>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Border.ToolTip>
                                    <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                        <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                        <Path Data="M0,0L2,0 8,6 8,8" Fill="White" Margin="1,3,0,0"/>
                                    </Grid>
                                </Border>
                                <Popup x:Name="Popup">
                                    <Grid Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                                        <Border x:Name="PopupBorder" BorderThickness="0" Background="#11000000" HorizontalAlignment="Stretch" Opacity="1">
                                            <Border.RenderTransform>
                                                <TranslateTransform X="1" Y="1"/>
                                            </Border.RenderTransform>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" HorizontalAlignment="Stretch" Opacity="1" Padding="0">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFDDDDDD" Offset="0"/>
                                                        <GradientStop Color="#AADDDDDD" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform X="-1" Y="-1"/>
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                                <ListBox x:Name="Selector" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>