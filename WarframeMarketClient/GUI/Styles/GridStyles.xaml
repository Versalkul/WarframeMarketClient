<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:MetroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:MetroConverters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                    xmlns:tabs="clr-namespace:WarframeMarketClient.GUI.Tabs"
                    xmlns:vm="clr-namespace:WarframeMarketClient.ViewModel"
                    xmlns:converter="clr-namespace:WarframeMarketClient.GUI.Converter"
                    
                    xmlns:System="clr-namespace:System;assembly=mscorlib">



    <!-- 1 of many places where the validation errors are styled... welcome to WPF-hell -->
    <Style x:Key="dgTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dgTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="0,1,0,0" Background="{TemplateBinding Background}">
                        <ScrollViewer Margin="0" Padding="0,0,0,2" x:Name="PART_ContentHost" SnapsToDevicePixels="True"/>
                        <!-- Draws over the Path drawn by the DataGridCell to be able to highlight binding errors like 'asdf' for numbers -->
                        <Path Name="EditUnderline"
                                    Margin="-3,12,-3,0"
                                    Stroke="{StaticResource BorderBrush}"
                                    StrokeThickness="2"
                                    Stretch="Fill"
                                    Data="M0,0 L0,5 5,5 5,0"
                                    HorizontalAlignment="Center"
                                    Visibility="Visible"
                                    VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="EditUnderline" Property="Stroke" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                              Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="DataGrid">

        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#e0e0e0"/>
        <Setter Property="Background" Value="Transparent"/>

        <!-- Currently does nothing -->
        <Setter Property="RowValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"
                          ToolTip="{Binding RelativeSource={RelativeSource
                          FindAncestor, AncestorType={x:Type DataGridRow}},
                          Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
                                FontWeight="Bold" Foreground="White" 
                                HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <converter:ErrorPropertiesAndNameToHasErrorConverter x:Key="ErrorPropertiesAndNameToHasErrorConverter"/>

            <Style TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Margin="0">
                                <Path Name="EditUnderline"
                                      Margin="3,15,3,0"
                                      Stroke="{StaticResource BorderBrush}"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      Data="M0,0 L0,5 5,5 5,0"
                                      HorizontalAlignment="Center"
                                      Visibility="Hidden"
                                      VerticalAlignment="Center" />
                                <Border Padding="5,10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEditing" Value="True">
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ErrorPropertiesAndNameToHasErrorConverter}">
                                            <Binding Path="ErrorProperties"></Binding>
                                            <Binding RelativeSource="{RelativeSource Self}"></Binding>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter TargetName="EditUnderline" Property="Stroke" Value="Red" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsEditing}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="EditUnderline" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#fff" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#f8f8f8" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource SelectionBrush}" />
                    </Trigger>

                    <DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                        
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BackgroundBorder"
                                      BorderThickness="0,0,0,2" 
                                      Background="Transparent"
                                      BorderBrush="#e0e0e0"
                                      Grid.ColumnSpan="2" />
                                <ContentPresenter
                                      Grid.Column="0"
                                      Margin="5,0,5,10"
                                      VerticalAlignment="Center" />
                                <Path x:Name="SortArrow"
                                      Grid.Column="1"
                                      Visibility="Collapsed"
                                      Data="M0,0 L0.4,0 0.5,0.5 0.6,0 1,0 0.5,1.5 z"
                                      Stretch="Fill"
                                      Width="8"
                                      Height="6"
                                      Fill="{StaticResource SelectionStrongBrush}"
                                      Margin="0,0,0,6"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      RenderTransformOrigin="0.5,0.4" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style TargetType="toolkit:AutoCompleteBox">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="1,1" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="2" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:AutoCompleteBox}">
                            <Grid Opacity="{TemplateBinding Opacity}">
                                <TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Foreground="{TemplateBinding Foreground}" IsTabStop="True" Margin="0" Padding="{TemplateBinding Padding}" Style="{StaticResource dgTextBoxStyle}"/>
                                <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                    <Border.ToolTip>
                                        <ToolTip x:Name="validationTooltip" Placement="Right">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>True</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                            <ToolTip.Template>
                                                <ControlTemplate TargetType="{x:Type ToolTip}">
                                                    <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                        <Grid.RenderTransform>
                                                            <TranslateTransform X="-25"/>
                                                        </Grid.RenderTransform>
                                                        <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                                                        <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                                                        <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                                                        <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                                                        <Border Background="#FFDC000C" CornerRadius="2">
                                                            <TextBlock Foreground="White" MaxWidth="250" Margin="8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
                                                        </Border>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </Border.ToolTip>
                                    <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                        <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                        <Path Data="M0,0L2,0 8,6 8,8" Fill="White" Margin="1,3,0,0"/>
                                    </Grid>
                                </Border>
                                <Popup x:Name="Popup">
                                    <Grid Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                                        <Border x:Name="PopupBorder" BorderThickness="0" Background="#11000000" HorizontalAlignment="Stretch" Opacity="1">
                                            <Border.RenderTransform>
                                                <TranslateTransform X="1" Y="1"/>
                                            </Border.RenderTransform>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" HorizontalAlignment="Stretch" Opacity="1" Padding="0">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFDDDDDD" Offset="0"/>
                                                        <GradientStop Color="#AADDDDDD" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform X="-1" Y="-1"/>
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                                <ListBox x:Name="Selector" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




           


            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" >
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="MetroControls:TextBoxHelper.ButtonWidth" Value="10" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="enterGotFocus">
                                    <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_WatermarkMessage"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".2" />
                                </Storyboard>
                                <Storyboard x:Key="exitGotFocus">
                                    <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_WatermarkMessage"
                                             Storyboard.TargetProperty="Opacity" />
                                </Storyboard>

                                <Storyboard x:Key="enterHasText">
                                    <DoubleAnimation Duration="0:0:0.2"
                                             From=".2"
                                             Storyboard.TargetName="PART_WatermarkMessage"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                                </Storyboard>
                                <Storyboard x:Key="exitHasText">
                                    <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_WatermarkMessage"
                                             Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="TextColumn" Width="*" />
                                        <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                        <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton x:Name="PART_DropDownToggle"
                                          Grid.ColumnSpan="3"
                                          Margin="0"
                                          VerticalAlignment="Stretch"
                                          Style="{DynamicResource MetroComboBoxDropDownToggleButtonStyle}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="0"
                                          MetroControls:TextBoxHelper.ButtonWidth="{TemplateBinding MetroControls:TextBoxHelper.ButtonWidth}"
                                          MetroControls:ControlsHelper.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                          MetroControls:TextBoxHelper.ButtonContent="{TemplateBinding MetroControls:TextBoxHelper.ButtonContent}"
                                          MetroControls:TextBoxHelper.ButtonContentTemplate="{TemplateBinding MetroControls:TextBoxHelper.ButtonContentTemplate}"
                                          MetroControls:TextBoxHelper.ButtonFontFamily="{TemplateBinding MetroControls:TextBoxHelper.ButtonFontFamily}"
                                          MetroControls:TextBoxHelper.ButtonFontSize="{TemplateBinding MetroControls:TextBoxHelper.ButtonFontSize}"
                                          MetroControls:TextBoxHelper.ClearTextButton="{TemplateBinding MetroControls:TextBoxHelper.ClearTextButton}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          KeyboardNavigation.IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Column="0"
                                     Margin="1 1 0 -1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     Style="{StaticResource EditableTextBoxStyle}"
                                     Background="{x:Null}"
                                     Foreground="{TemplateBinding Foreground}"
                                     BorderThickness="0"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     MetroControls:TextBoxHelper.ButtonWidth="{TemplateBinding MetroControls:TextBoxHelper.ButtonWidth}"
                                     MetroControls:TextBoxHelper.ButtonContent="{TemplateBinding MetroControls:TextBoxHelper.ButtonContent}"
                                     MetroControls:TextBoxHelper.ButtonContentTemplate="{TemplateBinding MetroControls:TextBoxHelper.ButtonContentTemplate}"
                                     MetroControls:TextBoxHelper.HasText="{TemplateBinding MetroControls:TextBoxHelper.HasText}"
                                     MetroControls:TextBoxHelper.ButtonFontFamily="{TemplateBinding MetroControls:TextBoxHelper.ButtonFontFamily}"
                                     MetroControls:TextBoxHelper.ButtonFontSize="{TemplateBinding MetroControls:TextBoxHelper.ButtonFontSize}"
                                     MetroControls:TextBoxHelper.UseFloatingWatermark="{TemplateBinding MetroControls:TextBoxHelper.UseFloatingWatermark}"
                                     MetroControls:TextBoxHelper.Watermark="{TemplateBinding MetroControls:TextBoxHelper.Watermark}"
                                     CharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ComboBoxHelper.CharacterCasing), Mode=OneWay}"
                                     Focusable="True"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ComboBoxHelper.MaxLength), Mode=OneWay}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     Visibility="Collapsed" />
                                    <TextBlock x:Name="PART_WatermarkMessage"
                                       Grid.Column="0"
                                       Margin="6 2 6 2"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Opacity="0.6"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding MetroControls:TextBoxHelper.Watermark}"
                                       Visibility="Collapsed" />
                                    <Grid x:Name="ContentSite"
                                  Grid.Column="0"
                                  Margin="7 0 4 0">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Grid>

                                <Border x:Name="FocusBorder"
                                Grid.ColumnSpan="3"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                                <Border x:Name="DisabledVisualElement"
                                Grid.ColumnSpan="3"
                                Background="{x:Null}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="0"
                                Opacity="0.6"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />

                                <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                                <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="PopupBorder"
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        Background="{DynamicResource WhiteBrush}"
                                        BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Effect="{DynamicResource DropShadowBrush}" />
                                        <ScrollViewer x:Name="DropDownScrollViewer"
                                              Margin="2"
                                              Padding="1"
                                              BorderThickness="0">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="FocusedDropDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_WatermarkMessage" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static MetroConverters:IsNullConverter.Instance}}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static MetroConverters:IsNullConverter.Instance}}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(MetroControls:TextBoxHelper.ClearTextButton)}" Value="False">
                                    <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Grid.ColumnSpan" Value="2" />
                                    <Setter TargetName="PART_WatermarkMessage" Property="Grid.ColumnSpan" Value="2" />
                                </DataTrigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <!--<Setter Property="Background" Value="{DynamicResource GrayBrush9}" />-->
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.MouseOverBorderBrush)}" />
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                    <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.FocusBorderBrush)}" />
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.FocusBorderBrush)}" />
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(MetroControls:ControlsHelper.FocusBorderBrush)}" />
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>